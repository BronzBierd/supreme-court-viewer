#!/bin/bash
export MSYS_NO_PATHCONV=1
set -e


S2I_EXE=s2i
if [ -z $(type -P "$S2I_EXE") ]; then
  echo -e "The ${S2I_EXE} executable is needed and not on your path."
  echo -e "It can be downloaded from here: https://github.com/openshift/source-to-image"
  echo -e "Make sure you place it in a directory on your path."
  exit 1
fi


SCRIPT_HOME="$( cd "$( dirname "$0" )" && pwd )"
#export COMPOSE_PROJECT_NAME="${COMPOSE_PROJECT_NAME-fpo}"

# =================================================================================================================
# Usage:
# -----------------------------------------------------------------------------------------------------------------
usage() {
  cat <<-EOF

  Usage: $0 {start|stop|build}

  Options:

  build - Build the docker images for the project.
          You need to do this first, since the builds require
          Docker builds.

  start - Creates the application containers from the built images
          and starts the services based on the docker-compose.yaml file.

          Example:
          $0 start

  stop - Stops the services.  This is a non-destructive process.  The containers
         are not deleted so they will be reused the next time you run start.

EOF
exit 1
}
# -----------------------------------------------------------------------------------------------------------------
# Default Settings:
# -----------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------
# Functions:
# -----------------------------------------------------------------------------------------------------------------

build-api() {
  #
  # fpo-api
  #
  echo -e "\nBuilding api image ..."
  ${S2I_EXE} build \
    -e "ASPNETCORE_ENVIRONMENT=Production" \
    -e "ASPNETCORE_URLS=http://+:5000" \
    -e "CORS_DOMAIN=http://localhost:8080" \
    '../scv-api' \
    'registry.centos.org/dotnet/dotnet-31-centos7' \
    'scv-api'
}

build-web(){
  ${S2I_EXE} build \
    '../scv-web' \
    'registry.centos.org/centos/nodejs-10-centos7' \
    'scv-web'
  echo -e
}

build-webx(){  
  docker build \
    -f './web/Dockerfile' '../web/' \
    -t 'scv-web'
  echo -e
}

buildImages() {
 build-web  
#  build-api
}




toLower() {
  echo $(echo ${@} | tr '[:upper:]' '[:lower:]')
}
# =================================================================================================================

pushd ${SCRIPT_HOME} >/dev/null
COMMAND=$(toLower ${1})
shift

case "$COMMAND" in
  start)
      docker-compose up
    ;;
  stop)
      docker-compose stop
    ;;
  build)
      buildImages
    ;;
  *)
    usage
esac

popd >/dev/null
